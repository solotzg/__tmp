version: "3.3"
name: "${LAKE_HOUSE_COMPOSE_PROJECT_NAME}"
services:

  namenode:
    image: apachehudi/hudi-hadoop_2.8.4-namenode:latest
    hostname: namenode
    environment:
      - CLUSTER_NAME=hudi_hadoop284_hive232_spark244
    ports:
      - "${hadoop_web_port}:50070"
      - "${hdfs_port}:8020"
      # JVM debugging port (will be mapped to a random port on host)
      # - "5005"
    env_file:
      - ${HUDI_WS}/docker/compose/hadoop.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://namenode:50070" ]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ${pingcap_demo_path}/.tmp.demo/third_party/hadoop/dfs/name:/hadoop/dfs/name

  datanode1:
    image: apachehudi/hudi-hadoop_2.8.4-datanode:latest
    environment:
      - CLUSTER_NAME=hudi_hadoop284_hive232_spark244
    env_file:
      - ${HUDI_WS}/docker/compose/hadoop.env
    ports:
      # - "50075:50075"
      - "${hadoop_datanode_port}:50010"
      # JVM debugging port (will be mapped to a random port on host)
      # - "5005"
    links:
      - "namenode"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://datanode1:50075" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - namenode
    volumes:
      - ${pingcap_demo_path}/.tmp.demo/third_party/hadoop/dfs/data:/hadoop/dfs/data

  zookeeper:
    image: 'bitnami/zookeeper:3.4.12-r68'
    hostname: zookeeper
    # ports:
      # - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: on-failure
    volumes:
      - ${pingcap_demo_path}/.tmp.demo/third_party/zookeeper:/bitnami

  kafka:
    image: 'bitnami/kafka:${KAFKA_VERSION}'
    hostname: kafkabroker
    ports:
      - "$kafka_port:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${demo_host}:${kafka_port}
    restart: on-failure
    volumes:
      - ${pingcap_demo_path}/.tmp.demo/third_party/kafka:/bitnami

  minio:
    image: minio/minio
    ports:
      - "${minio_port}:9000"
      - "${minio_web_port}:9001"
    volumes:
      - ${pingcap_demo_path}/.tmp.demo/third_party/minio_storage:/data
    command: server --console-address ":9001" /data

  jobmanager:
    image: flink:${FLINK_VERSION}
    volumes:
      - ${env_libs}:/pingcap/env_libs
      - ${pingcap_demo_path}:/pingcap/demo
      - ${pingcap_demo_path}/.tmp.demo/third_party/flink:/tmp
      - ${pingcap_demo_path}/.tmp.demo/third_party/flink-log:/opt/flink/log
    ports:
      - "$flink_jobmanager_port:8081"
    command: /pingcap/demo/flink-jobmanager.sh
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        jobmanager.memory.process.size: 6048m
        s3.endpoint: http://minio:9000
        s3.path.style.access: true
        s3.access-key: minioadmin
        s3.secret-key: minioadmin
    restart: on-failure

  taskmanager:
    image: flink:${FLINK_VERSION}
    volumes:
      - ${env_libs}:/pingcap/env_libs
      - ${pingcap_demo_path}:/pingcap/demo
      - ${pingcap_demo_path}/.tmp.demo/third_party/flink:/tmp
      - ${pingcap_demo_path}/.tmp.demo/third_party/flink-log:/opt/flink/log
    depends_on:
      - jobmanager
    command: /pingcap/demo/flink-taskmanager.sh
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 20
        taskmanager.memory.process.size: 6048m
        s3.endpoint: http://minio:9000
        s3.path.style.access: true
        s3.access-key: minioadmin
        s3.secret-key: minioadmin
    restart: on-failure

  sql-client:
    image: flink:${FLINK_VERSION}
    # command: /opt/flink/bin/flink-sql-client.sh embedded
    command: bash
    volumes:
      - ${env_libs}:/pingcap/env_libs
      - ${pingcap_demo_path}:/pingcap/demo
      - ${pingcap_demo_path}/.tmp.demo/third_party/flink:/tmp
      - ${pingcap_demo_path}/.tmp.demo/third_party/flink-log:/opt/flink/log
    depends_on:
      - jobmanager
      - taskmanager
    tty: true
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        rest.address: jobmanager
        s3.endpoint: http://minio:9000
        s3.path.style.access: true
        s3.access-key: minioadmin
        s3.secret-key: minioadmin

